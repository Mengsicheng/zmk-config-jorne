/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <dt-bindings/led/led.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&spi1 {
	compatible = "nordic,nrf-spim";
	/* Cannot be used together with i2c0. */
	status = "okay";
	mosi-pin = <6>;
	// Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
	sck-pin = <5>;
	miso-pin = <7>;

	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";
		label = "WS2812";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;

		/* WS2812 */
		chain-length = <6>; /* There are per-key RGB, but the first 6 are underglow */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;
		color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
	};
};

/ {
    chosen {
		zmk,underglow = &led_strip;
	};

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  GUI |   &lt RSE ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
//        |  &lt DEF GUI |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
//        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
//                           | RSE | SPC | &lt LWR SPACE |   | LWR | BKSP | RSE | 
                        bindings = <
    &kp Y &kp U &kp I &kp O &kp P &kp BACKSPACE &kp ENTER            &kp Y &kp U &kp I &kp O &kp P &kp BACKSPACE &kp ENTER           
     &kp H &kp J &kp K &kp L &kp SEMI &kp ENTER                       &kp H &kp J &kp K &kp L &kp SEMI &kp ENTER     
      &kp B &kp N &kp M &kp QMARK &kp COLON  &lt RSE SEMI                          &kp B &kp N &kp M &kp QMARK &kp COLON  &lt RSE SEMI                    
       &lt ADJ SPACE &kp RCTRL &kp RALT                                  &lt ADJ SPACE &kp RCTRL &kp RALT            
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
//       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
//       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
//                    | GUI |     | SPC |   | ENT |     | ALT | 
                        bindings = <
    &kp N6 &kp N7 &kp N8 &kp N9 &kp N0  &kp BSLH &bt BT_SEL 2              &kp N6   &kp N7 &kp N8   &kp N9    &kp N0     &kp BSLH &bt BT_SEL 2                                       
     &kp ENTER &kp COLON &kp RIGHT &kp DOWN &kp UP &kp LEFT                 &kp LEFT &kp UP &kp DOWN &kp RIGHT &kp COLON  &kp ENTER               
      &trans &bt BT_SEL 3 &kp DOT &kp COMMA &trans &trans &trans             &trans   &trans &trans   &kp COMMA &kp DOT    &bt BT_SEL 3                            
       &rgb_ug RGB_HUD &rgb_ug RGB_SAI &rgb_ug RGB_HUI                        &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_HUD                                         
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
//       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
//       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
//                          |     |     | ADJ |   | ADJ |     |     |
                        bindings = <
   &trans &kp PIPE &kp RPAR &kp LPAR &kp STAR &kp AMPS &kp CARET    &kp CARET &kp AMPS &kp STAR    &kp LPAR &kp RPAR  &kp PIPE &trans               
    &kp DEL &trans &kp DQ &trans  T &trans &kp F6                    &kp F6    &trans   &trans      &kp DQT  &trans    &kp DEL           
     &trans &trans &kp GT &kp LT &kp C_MUTE &trans &kp F12            &kp F12   &trans   &kp C_MUTE  &kp LT   &kp GT    &trans         
      &trans &trans &trans                                             &trans &reset &trans 
                        >;
                };
                adjust_layer {
// -----------------------------------------------------------------------------------------
// | RST | BLDR | HI  | SI  | BI  | PI  | EF  |   |     |     |     |     |     | BLDR | RST | 
//       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
//       |      | HD  | SD  | BD  | PD  | ER  |   |     |     |     |     |     |      | 
//                          |     | RGB |     |   |     | OUT |     |
                        bindings = <
   &trans &trans &kp RBKT &kp LBKT &none &none &none                                    &trans &trans &none &none &none &kp LBKT &kp RBKT &trans &trans             
    &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4          &bt BT_SEL 4 &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0  &bt BT_CLR       
     &kp K_POWER &kp RBRC &kp LBRC &none &none &none                                      &none &none &none &kp LBRC &kp RBRC &kp K_POWER    
      &trans &trans &trans                                                                 &trans &trans &trans 
                        >;
                };
        };
};
